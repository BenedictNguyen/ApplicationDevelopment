package View;

import DAO.Ban_DAO;
import DAO.ChiTietGoiMon_DAO;
import DAO.MonAn_DAO;
import Entity.Ban;
import Entity.ChiTietGoiMon;
import Entity.MonAn;
import Entity.NhanVien;
import LoginForm.main.Main;
import java.awt.Dimension;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author ADMIN
 */
public class DatMonForm extends javax.swing.JPanel {

    private final Ban_DAO ban_dao;
    private DefaultTableModel modelTable;
    private final ChiTietGoiMon_DAO goiMon_dao;
    private DefaultTableModel modelTable2;
    private final MonAn_DAO monAn_dao;
    private DefaultTableModel modelTable3;
    private DefaultTableModel modelTable4;
    private DefaultTableModel modelTable8;
    private DefaultTableModel modelTable7;
    private DefaultTableModel modelTable5;
    private DefaultTableModel modelTable6;
    private DefaultTableModel modelTable9;

    /**
     * Creates new form DatMonForm
     */
    public DatMonForm() {
        initComponents();
        try {
            ConnectDB.ConnectDB.getInstance().connect();
            System.out.println("Connected!!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        ban_dao = new Ban_DAO();
        goiMon_dao = new ChiTietGoiMon_DAO();
        monAn_dao = new MonAn_DAO();
        docDuLieuDatabaseVaoTableBan();
        docDuLieuDatabaseVaoTableMonAn();

        jTextField2.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                modelTable.setRowCount(0);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                modelTable.setRowCount(0);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        scrollPaneWin114 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader4 = {"Mã món ăn", "Tên món", "Đơn giá", "Số lượng"};
        modelTable4 = new DefaultTableModel(colHeader4, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable4 = new javax.swing.JTable(modelTable4);
        scrollPaneWin115 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader5 = {"Mã món ăn", "Tên món", "Đơn giá", "Số lượng"};
        modelTable5 = new DefaultTableModel(colHeader5, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable5 = new javax.swing.JTable(modelTable5);
        scrollPaneWin116 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader6 = {"Mã món ăn", "Tên món", "Đơn giá", "Số lượng"};
        modelTable6 = new DefaultTableModel(colHeader6, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable6 = new javax.swing.JTable(modelTable6);
        scrollPaneWin117 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader7 = {"Mã món ăn", "Tên món", "Đơn giá", "Số lượng"};
        modelTable7 = new DefaultTableModel(colHeader7, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable7 = new javax.swing.JTable(modelTable7);
        scrollPaneWin118 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader8 = {"Mã món ăn", "Tên món", "Đơn giá", "Số lượng"};
        modelTable8 = new DefaultTableModel(colHeader8, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable8 = new javax.swing.JTable(modelTable8);
        scrollPaneWin1110 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader9 = {"Mã món ăn", "Tên món", "Đơn giá", "Số lượng","Ghi chú"};
        modelTable9 = new DefaultTableModel(colHeader9, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable9 = new javax.swing.JTable(modelTable9);
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        soLuongTxt = new javax.swing.JTextField();
        ghiChuTxt = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        scrollPaneWin111 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader = {"Mã bàn", "Số bàn"};
        modelTable = new DefaultTableModel(colHeader, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable1 = new javax.swing.JTable(modelTable);
        jTextField2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        scrollPaneWin112 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader3 = {"Mã món ăn","Tên món ăn","Tổng số lượng"};
        modelTable3 = new DefaultTableModel(colHeader3, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable2 = new javax.swing.JTable(modelTable3);
        jPanel3 = new javax.swing.JPanel();
        scrollPaneWin113 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader2 = {"Mã phiếu gọi món","Mã nhân viên","Món","Số lượng","Ghi chú","Trạng thái","Thời điểm"};
        modelTable2 = new DefaultTableModel(colHeader2, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable3 = new javax.swing.JTable(modelTable2);
        jButton7 = new javax.swing.JButton();

        jDialog1.setModal(true);

        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        scrollPaneWin114.setViewportView(jTable4);
        scrollPaneWin114.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable4.getTableHeader().setResizingAllowed(false);
        jTable4.getTableHeader().setReorderingAllowed(false);
        jTable4.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable4.setRowHeight(jTable4.getRowHeight() + 10);

        jTabbedPane2.addTab("Khai vị", scrollPaneWin114);

        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        scrollPaneWin115.setViewportView(jTable5);
        scrollPaneWin115.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable5.getTableHeader().setResizingAllowed(false);
        jTable5.getTableHeader().setReorderingAllowed(false);
        jTable5.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable5.setRowHeight(jTable5.getRowHeight() + 10);

        jTabbedPane2.addTab("Chính", scrollPaneWin115);

        jTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable6MouseClicked(evt);
            }
        });
        scrollPaneWin116.setViewportView(jTable6);
        scrollPaneWin116.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable6.getTableHeader().setResizingAllowed(false);
        jTable6.getTableHeader().setReorderingAllowed(false);
        jTable6.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable6.setRowHeight(jTable6.getRowHeight() + 10);

        jTabbedPane2.addTab("Tráng miệng", scrollPaneWin116);

        jTable7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable7MouseClicked(evt);
            }
        });
        scrollPaneWin117.setViewportView(jTable7);
        scrollPaneWin117.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable7.getTableHeader().setResizingAllowed(false);
        jTable7.getTableHeader().setReorderingAllowed(false);
        jTable7.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable7.setRowHeight(jTable7.getRowHeight() + 10);

        jTabbedPane2.addTab("Nước", scrollPaneWin117);

        jTable8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable8MouseClicked(evt);
            }
        });
        scrollPaneWin118.setViewportView(jTable8);
        scrollPaneWin118.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable8.getTableHeader().setResizingAllowed(false);
        jTable8.getTableHeader().setReorderingAllowed(false);
        jTable8.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable8.setRowHeight(jTable8.getRowHeight() + 10);

        jTabbedPane2.addTab("Món nhẹ", scrollPaneWin118);

        scrollPaneWin1110.setViewportView(jTable9);
        scrollPaneWin1110.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable9.getTableHeader().setResizingAllowed(false);
        jTable9.getTableHeader().setReorderingAllowed(false);
        jTable9.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable9.setRowHeight(jTable9.getRowHeight() + 10);

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("Hủy");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton6.setText("Đặt");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE)
                    .addComponent(scrollPaneWin1110, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jDialog1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(scrollPaneWin1110, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jDialog2.setModal(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Nhập số lượng");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Nhập ghi chú");

        soLuongTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        soLuongTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soLuongTxtActionPerformed(evt);
            }
        });

        ghiChuTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton4.setText("Hủy");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton8.setText("Đặt");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialog2Layout.createSequentialGroup()
                        .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(soLuongTxt)
                            .addComponent(ghiChuTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(soLuongTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ghiChuTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/serving-dish_1.png"))); // NOI18N
        jButton1.setText("Đặt món");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        jButton3.setText("Làm mới");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/food_1.png"))); // NOI18N
        jButton5.setText("Hủy món");
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Danh sách bàn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        scrollPaneWin111.setViewportView(jTable1);
        scrollPaneWin111.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable1.setRowHeight(jTable1.getRowHeight() + 10);

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneWin111, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                    .addComponent(jTextField2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneWin111, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Danh sách món", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        scrollPaneWin112.setViewportView(jTable2);
        scrollPaneWin112.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable2.getTableHeader().setResizingAllowed(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable2.setRowHeight(jTable2.getRowHeight() + 10);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneWin112, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneWin112, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Đơn đặt món", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        scrollPaneWin113.setViewportView(jTable3);
        scrollPaneWin113.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable3.getTableHeader().setResizingAllowed(false);
        jTable3.getTableHeader().setReorderingAllowed(false);
        jTable3.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable3.setRowHeight(jTable3.getRowHeight() + 10);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneWin113, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneWin113, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/notification.png"))); // NOI18N
        jButton7.setText("Hoàn thành món");
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        if (row >= 0) {
            modelTable2.setRowCount(0);
            docDuLieuDatabaseVaoTableDonDatMon((String) modelTable.getValueAt(row, 0));
            modelTable3.setRowCount(0);
            docDuLieuDatabaseVaoTableDanhSachMon((String) modelTable.getValueAt(row, 0));
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTable1.clearSelection();
        jTable2.clearSelection();
        jTable3.clearSelection();
        modelTable.setRowCount(0);
        modelTable2.setRowCount(0);
        modelTable3.setRowCount(0);
        docDuLieuDatabaseVaoTableBan();
        jTextField2.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int row = jTable3.getSelectedRow();
        if (row >= 0) {
            if (modelTable2.getValueAt(row, 5).equals("Hoàn thành")) {
                JOptionPane.showMessageDialog(null, "Món đã hoàn thành không thể hủy!");
            } else {
                if (goiMon_dao.delete((String) modelTable2.getValueAt(row, 0))) {
                    JOptionPane.showMessageDialog(null, "Hủy món thành công");
                    modelTable2.setRowCount(0);
                    docDuLieuDatabaseVaoTableDonDatMon((String) modelTable.getValueAt(jTable1.getSelectedRow(), 0));
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int row = jTable1.getSelectedRow();
        if (row >= 0) {
            jDialog1.setSize(831, 620);
            jDialog1.setLocationRelativeTo(null);
            jDialog1.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Chọn bàn trước khi đặt món");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        handleTableMouseClick(jTable4, modelTable4);
    }//GEN-LAST:event_jTable4MouseClicked

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        handleTableMouseClick(jTable5, modelTable5);
    }//GEN-LAST:event_jTable5MouseClicked

    private void jTable6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable6MouseClicked
        handleTableMouseClick(jTable6, modelTable6);
    }//GEN-LAST:event_jTable6MouseClicked

    private void jTable7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable7MouseClicked
        handleTableMouseClick(jTable7, modelTable7);
    }//GEN-LAST:event_jTable7MouseClicked

    private void jTable8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable8MouseClicked
        handleTableMouseClick(jTable8, modelTable8);
    }//GEN-LAST:event_jTable8MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        modelTable9.setRowCount(0);
        jDialog1.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int rowCount = jTable9.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            String maCTGM = generateMaCTGM(LocalDateTime.now());
            NhanVien maNV = new NhanVien(Main.maNV);
            MonAn maMA = new MonAn(modelTable9.getValueAt(i, 0).toString());
            Ban maBan = new Ban(modelTable.getValueAt(jTable1.getSelectedRow(), 0).toString());
            int soLuong = Integer.parseInt(modelTable9.getValueAt(i, 3).toString());
            String ghiChu = modelTable9.getValueAt(i, 4).toString();
            String trangThai = "Chưa hoàn thành";
            LocalDateTime thoiDiem = LocalDateTime.now();
            String thanhToan = "Chưa thanh toán";
            ChiTietGoiMon gm = new ChiTietGoiMon(maCTGM, maNV, maMA, maBan, soLuong, ghiChu, trangThai, thoiDiem, thanhToan);
            goiMon_dao.insert(gm);
        }
        jDialog1.dispose();
        modelTable2.setRowCount(0);
        modelTable3.setRowCount(0);
        docDuLieuDatabaseVaoTableDanhSachMon((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
        docDuLieuDatabaseVaoTableDonDatMon((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int row = jTable3.getSelectedRow();
        if (row >= 0) {
            if (modelTable2.getValueAt(row, 5).equals("Chưa hoàn thành")) {
                if (goiMon_dao.updateTrangThai("Hoàn thành", (String) modelTable2.getValueAt(row, 0))) {
                    JOptionPane.showMessageDialog(null, "Món đã hoàn thành");
                    modelTable2.setRowCount(0);
                    docDuLieuDatabaseVaoTableDonDatMon((String) modelTable.getValueAt(jTable1.getSelectedRow(), 0));
                    modelTable3.setRowCount(0);
                    docDuLieuDatabaseVaoTableDanhSachMon((String) modelTable.getValueAt(jTable1.getSelectedRow(), 0));
                }
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void soLuongTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soLuongTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_soLuongTxtActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jDialog2.dispose();
        jDialog1.setVisible(true);
        soLuongTxt.setText("");
        ghiChuTxt.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String soLuong = soLuongTxt.getText().trim();
        String ghiChu = ghiChuTxt.getText().trim();
        try {
            if (Integer.parseInt(soLuong) <= 0) {
                JOptionPane.showMessageDialog(null, "Số lượng phải lớn hơn 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Số lượng phải là số", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int selectedTabIndex = jTabbedPane2.getSelectedIndex(); // Lấy tab đang được chọn
        Utils.scroll.win11.ScrollPaneWin11 selectedScrollPane = (Utils.scroll.win11.ScrollPaneWin11) jTabbedPane2.getComponentAt(selectedTabIndex); // Lấy JScrollPane chứa JTable
        JTable selectedTable = (JTable) selectedScrollPane.getViewport().getView(); // Lấy JTable từ JScrollPane

        int selectedRow = selectedTable.getSelectedRow();
        if (selectedRow >= 0) {
            modelTable9.addRow(new Object[]{selectedTable.getValueAt(selectedRow, 0), selectedTable.getValueAt(selectedRow, 1), monAn_dao.searchDonGiaMonAnTheoMa((String) selectedTable.getValueAt(selectedRow, 0)), soLuong, ghiChu});
            jDialog2.dispose();
            soLuongTxt.setText("");
            ghiChuTxt.setText("");
            jDialog1.setVisible(true);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void docDuLieuDatabaseVaoTableBan() {
        List<Ban> list = ban_dao.getAllTableBan();
        for (Ban ban : list) {
            if (ban.getTrangThai().equals("Đang sử dụng")) {
                modelTable.addRow(new Object[]{ban.getMaBan(), ban.getMaBan().substring(1)});
            }
        }
    }

    private void docDuLieuDatabaseVaoTableDonDatMon(String maBan) {
        List<ChiTietGoiMon> listGM = goiMon_dao.searchBanChuaThanhToan(maBan);
        List<MonAn> listMA = monAn_dao.getAllTableMonAn();
        for (ChiTietGoiMon ctgm : listGM) {
            String tenMon = monAn_dao.searchTenMonAnTheoMa(ctgm.getMaMA().getMaMA());
            modelTable2.addRow(new Object[]{ctgm.getMaCTGM(), ctgm.getMaNV().getMaNV(), tenMon, ctgm.getSoLuong(), ctgm.getGhiChu(), ctgm.getTrangThai(), ctgm.getThoiDiem().toString()});
        }
    }

    private void docDuLieuDatabaseVaoTableDanhSachMon(String maBan) {
        List<ChiTietGoiMon> listGM = goiMon_dao.searchBanChuaThanhToanDaHoanThanh(maBan);
        List<MonAn> listMA = monAn_dao.getAllTableMonAn();
        String tenMon = null;
        Map<String, Integer> maMACount = tongMonCuaBan(listGM);
        for (Map.Entry<String, Integer> entry : maMACount.entrySet()) {
            for (MonAn ma : listMA) {
                if (ma.getMaMA().equals(entry.getKey())) {
                    tenMon = ma.getTenMA();
                    break;
                }
            }
            modelTable3.addRow(new Object[]{entry.getKey(), tenMon, entry.getValue()});
        }
    }

    private Map<String, Integer> tongMonCuaBan(List<ChiTietGoiMon> chiTietGoiMonList) {
        Map<String, Integer> maMACount = new HashMap<>();

        // Duyệt qua danh sách
        for (ChiTietGoiMon chiTiet : chiTietGoiMonList) {
            String maMA = chiTiet.getMaMA().getMaMA(); // Lấy mã món ăn
            int soLuong = chiTiet.getSoLuong(); // Lấy số lượng món ăn

            // Nếu mã món đã tồn tại, cộng dồn số lượng vào giá trị hiện tại
            maMACount.put(maMA, maMACount.getOrDefault(maMA, 0) + soLuong);
        }

        return maMACount; // Trả về Map
    }

    private void docDuLieuDatabaseVaoTableMonAn() {
        List<MonAn> listMA = monAn_dao.getAllTableMonAn();
        for (MonAn ma : listMA) {
            if (ma.getMaLoai().getMaLoai().equals("L01")) {
                modelTable4.addRow(new Object[]{ma.getMaMA(), ma.getTenMA(), ma.getDonGia(), ma.getSoLuong()});
            }
            if (ma.getMaLoai().getMaLoai().equals("L02")) {
                modelTable5.addRow(new Object[]{ma.getMaMA(), ma.getTenMA(), ma.getDonGia(), ma.getSoLuong()});
            }
            if (ma.getMaLoai().getMaLoai().equals("L03")) {
                modelTable6.addRow(new Object[]{ma.getMaMA(), ma.getTenMA(), ma.getDonGia(), ma.getSoLuong()});
            }
            if (ma.getMaLoai().getMaLoai().equals("L04")) {
                modelTable7.addRow(new Object[]{ma.getMaMA(), ma.getTenMA(), ma.getDonGia(), ma.getSoLuong()});
            }
            if (ma.getMaLoai().getMaLoai().equals("L05")) {
                modelTable8.addRow(new Object[]{ma.getMaMA(), ma.getTenMA(), ma.getDonGia(), ma.getSoLuong()});
            }
        }
    }

    private boolean updateRowIfItemExists(String maMA, String soLuong, int row, String tenMon, String donGia) {
        // Duyệt qua tất cả các dòng trong modelTable9
        for (int i = 0; i < modelTable9.getRowCount(); i++) {
            // Lấy mã món từ cột 0
            String maMAInTable = modelTable9.getValueAt(i, 0).toString();

            // Kiểm tra nếu mã món trùng
            if (maMAInTable.equals(maMA)) {
                // Cập nhật lại số lượng tại cột 3 (giả sử cột 3 chứa số lượng)
//                int currentQuantity = Integer.parseInt(modelTable9.getValueAt(i, 3).toString());
                int newQuantity = Integer.parseInt(soLuong); // Cộng số lượng mới vào số lượng hiện tại
                modelTable9.setValueAt(newQuantity, i, 3); // Cập nhật lại số lượng ở cột 3
                return true; // Thoát sau khi cập nhật
            }
        }

        // Nếu mã món không tồn tại, thêm dòng mới
        modelTable9.addRow(new Object[]{maMA, tenMon, donGia, soLuong, ghiChuTxt.getText()});
        return true;
    }

    private void handleTableMouseClick(JTable table, DefaultTableModel modelTable) {
        int row = table.getSelectedRow();
        String soLuong = soLuongTxt.getText().trim();
        if (row >= 0) {
            jDialog1.dispose();
            jDialog2.setSize(441, 220);
            jDialog2.setLocationRelativeTo(null);
            jDialog2.setVisible(true);
//            if (soLuong == null) {
//                // Nếu nhấn hủy
//            } else if (!soLuong.trim().isEmpty()) {
//                try {
//                    if (Integer.parseInt(soLuong) <= 0) {
//                        JOptionPane.showMessageDialog(null, "Số lượng phải lớn hơn 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
//                        if (soLuong != null && !soLuong.trim().isEmpty()) {
//                            // Gọi hàm kiểm tra và thêm/sửa dòng nếu mã món đã tồn tại
//                            updateRowIfItemExists(modelTable.getValueAt(row, 0).toString(), soLuong, row, modelTable.getValueAt(row, 1).toString(), modelTable.getValueAt(row, 2).toString());
//                        }
//                    } else {
//                        // Gọi hàm kiểm tra và thêm/sửa dòng nếu mã món đã tồn tại
//                        updateRowIfItemExists(modelTable.getValueAt(row, 0).toString(), soLuong, row, modelTable.getValueAt(row, 1).toString(), modelTable.getValueAt(row, 2).toString());
//                    }
//                } catch (NumberFormatException e) {
//                    JOptionPane.showMessageDialog(null, "Vui lòng nhập một số hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
//                }
//            } else {
//                // Nếu người dùng không nhập gì hoặc nhấn hủy
//            }
        }
    }

    public String generateMaCTGM(LocalDateTime dateTime) {
        int minute = dateTime.getMinute();
        int hour = dateTime.getHour(); // Lấy giờ
        int day = dateTime.getDayOfMonth(); // Lấy ngày
        int month = dateTime.getMonthValue(); // Lấy tháng
        int year = dateTime.getYear() % 100; // Lấy hai chữ số cuối của năm
        int tt = kiemTraTT(day, month, year);
        // Tạo mã phiếu theo định dạng PXXYYZZAA
        return String.format("CTGM%02d%02d%02d%02d%02d%04d", minute, hour, day, month, year, tt);
    }

    public int kiemTraTT(int day, int month, int year) {
        int tt = 1;
        List<ChiTietGoiMon> list = goiMon_dao.getAllTableChiTietGoiMon();
        for (ChiTietGoiMon gm : list) {
            if (gm.getMaCTGM().substring(8, 14).equals(String.valueOf(day) + String.valueOf(month) + String.valueOf(year))) {
                tt += 1;
            }
        }
        return tt;
    }

    public void findBan(String maBan) {
        List<Ban> list = ban_dao.getAllTableBan();
        for (Ban ban : list) {
            if (ban.getTrangThai().equals("Đang sử dụng")) {
                if (ban.getMaBan().contains(maBan)) {
                    modelTable.addRow(new Object[]{ban.getMaBan(), ban.getMaBan().substring(1)});
                } else if (ban.getMaBan().equals("")) {
                    docDuLieuDatabaseVaoTableBan();
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ghiChuTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextField jTextField2;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin111;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin1110;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin112;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin113;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin114;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin115;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin116;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin117;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin118;
    private javax.swing.JTextField soLuongTxt;
    // End of variables declaration//GEN-END:variables

}
