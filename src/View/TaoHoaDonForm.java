/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import DAO.Ban_DAO;
import DAO.ChiTietGoiMon_DAO;
import DAO.ChiTietHoaDon_DAO;
import DAO.HoaDon_DAO;
import DAO.KhachHang_DAO;
import DAO.MonAn_DAO;
import DAO.PhieuDatBan_DAO;
import Entity.Ban;
import Entity.ChiTietGoiMon;
import Entity.ChiTietHoaDon;
import Entity.HoaDon;
import Entity.KhachHang;
import Entity.MonAn;
import Entity.NhanVien;
import LoginForm.main.Main;
import java.awt.Dimension;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JViewport;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class TaoHoaDonForm extends javax.swing.JPanel {

    private DefaultTableModel modelTable;
    private final Ban_DAO ban_dao;
    private final ChiTietGoiMon_DAO goiMon_dao;
    private DefaultTableModel modelTable2;
    private final MonAn_DAO monAn_dao;
    private final HoaDon_DAO hoaDon_dao;
    private final KhachHang_DAO khachHang_dao;
    private final PhieuDatBan_DAO phieuDatBan_dao;
    private DefaultTableModel modelTable3;
    private final ChiTietHoaDon_DAO chiTietHoaDon_dao;

    /**
     * Creates new form TaoHoaDonForm
     */
    public TaoHoaDonForm() {
        initComponents();
        try {
            ConnectDB.ConnectDB.getInstance().connect();
            System.out.println("Connected!!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        ban_dao = new Ban_DAO();
        goiMon_dao = new ChiTietGoiMon_DAO();
        monAn_dao = new MonAn_DAO();
        hoaDon_dao = new HoaDon_DAO();
        khachHang_dao = new KhachHang_DAO();
        phieuDatBan_dao = new PhieuDatBan_DAO();
        chiTietHoaDon_dao = new ChiTietHoaDon_DAO();
        docDuLieuDatabaseVaoTableBan();
        String maNV = Main.maNV;
        maNVTxt.setText(maNV);
        sdtTxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                capNhatTenVaCapBac();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                capNhatTenVaCapBac();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });

        capBacTxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                capNhatGiam();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                capNhatGiam();
            }
        });

        giamTxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                capNhatTienGiam();
                capNhatVAT();
                capNhatThanhTIen();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {

            }
        });

        tongTienTxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                capNhatTienGiam();
                capNhatVAT();
                capNhatThanhTIen();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {

            }
        });

        jTextField2.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {

            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                modelTable.setRowCount(0);
                findBan(jTextField2.getText());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                modelTable.setRowCount(0);
                findBan(jTextField2.getText());
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        scrollPaneWin113 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader3 = {"Mã hóa đơn","Số bàn","Ngày lập","Phương thức thanh toán","Thành tiền"};
        modelTable3 = new DefaultTableModel(colHeader3, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable3 = new javax.swing.JTable(modelTable3);
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        scrollPaneWin111 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader = {"Mã bàn", "Số bàn"};
        modelTable = new DefaultTableModel(colHeader, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable1 = new javax.swing.JTable(modelTable);
        jPanel2 = new javax.swing.JPanel();
        scrollPaneWin112 = new Utils.scroll.win11.ScrollPaneWin11();
        String[] colHeader2 = {"Trạng thái","Mã món ăn","Tên món ăn","Đơn giá","Số lượng","Tổng tiền"};
        modelTable2 = new DefaultTableModel(colHeader2, 0) {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTable2 = new javax.swing.JTable(modelTable2);
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        maHDTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sdtTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tenKHTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        capBacTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        giamTxt = new javax.swing.JTextField();
        maNVTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tongTienTxt = new javax.swing.JTextField();
        taoHoaDonBtn = new javax.swing.JButton();
        lamMoiBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        tienGiamTxt = new javax.swing.JTextField();
        vATTxt = new javax.swing.JTextField();
        thanhTienTxt = new javax.swing.JTextField();

        jDialog1.setModal(true);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Chọn phương thức thanh toán");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Tiền mặt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("Chuyển khoản");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 0, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton4.setText("Huỷ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jDialog2.setModal(true);

        scrollPaneWin113.setViewportView(jTable3);
        scrollPaneWin113.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable3.getTableHeader().setResizingAllowed(false);
        jTable3.getTableHeader().setReorderingAllowed(false);
        jTable3.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable3.setRowHeight(jTable3.getRowHeight() + 10);

        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton5.setText("Hoàn thành");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton6.setText("Thoát");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneWin113, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog2Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneWin113, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Danh sách bàn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(204, 0, 153));

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        scrollPaneWin111.setViewportView(jTable1);
        scrollPaneWin111.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable1.setRowHeight(jTable1.getRowHeight() + 10);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneWin111, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneWin111, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Danh sách món", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        scrollPaneWin112.setViewportView(jTable2);
        scrollPaneWin112.setColumnHeader(new JViewport() {
            /**
            *
            */
            private static final long serialVersionUID = 1L;

            @Override
            public Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                d.height = 32;
                return d;
            }
        });
        jTable2.getTableHeader().setResizingAllowed(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.setFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 15));
        jTable2.setRowHeight(jTable2.getRowHeight() + 10);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneWin112, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(scrollPaneWin112, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Thông tin hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Mã hóa đơn");

        maHDTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        maHDTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        maHDTxt.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("SĐT");

        sdtTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Tên khách hàng");

        tenKHTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tenKHTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tenKHTxt.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Cấp bậc");

        capBacTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        capBacTxt.setText("Đồng");
        capBacTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        capBacTxt.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Giảm (%)");

        giamTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        giamTxt.setText("0");
        giamTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        giamTxt.setEnabled(false);

        maNVTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        maNVTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        maNVTxt.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setText("Mã nhân viên");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setText("Tổng tiền");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setText("Tiền giảm");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setText("VAT");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel11.setText("Thành tiền");

        tongTienTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tongTienTxt.setText("0.0");
        tongTienTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tongTienTxt.setEnabled(false);

        taoHoaDonBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        taoHoaDonBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add_1.png"))); // NOI18N
        taoHoaDonBtn.setText("Tạo hóa đơn");
        taoHoaDonBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        taoHoaDonBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        taoHoaDonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taoHoaDonBtnActionPerformed(evt);
            }
        });

        lamMoiBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lamMoiBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/refresh.png"))); // NOI18N
        lamMoiBtn.setText("Làm mới");
        lamMoiBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lamMoiBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lamMoiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lamMoiBtnActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/hourglass.png"))); // NOI18N
        jButton3.setText("Hóa đơn chờ");
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tienGiamTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tienGiamTxt.setText("0.0");
        tienGiamTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        tienGiamTxt.setEnabled(false);

        vATTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        vATTxt.setText("0.0");
        vATTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        vATTxt.setEnabled(false);

        thanhTienTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        thanhTienTxt.setText("0.0");
        thanhTienTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        thanhTienTxt.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(taoHoaDonBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lamMoiBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(capBacTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tenKHTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sdtTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maHDTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(giamTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vATTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(thanhTienTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maNVTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tongTienTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tienGiamTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(maHDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maNVTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(sdtTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tongTienTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tenKHTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tienGiamTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(capBacTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(vATTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(giamTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(thanhTienTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(taoHoaDonBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lamMoiBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        modelTable3.setRowCount(0);
        docDuLieuDatabaseVaoTableHoaDon();
        jDialog2.setSize(900, 330);
        jDialog2.setLocationRelativeTo(null);
        jDialog2.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        if (row >= 0) {
            modelTable2.setRowCount(0);
            docDuLieuDataBaseVaoTableMon((String) modelTable.getValueAt(row, 0));
            maHDTxt.setText(generateMaHoaDon(LocalDate.now()));
            if (jTable2.getRowCount() <= 0) {
                vATTxt.setText("0.0");
                tienGiamTxt.setText("0.0");
                thanhTienTxt.setText("0.0");
                tongTienTxt.setText("0.0");
            } else {
                tongTienTxt.setText(String.valueOf(tongTien()));
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked

    }//GEN-LAST:event_jTable2MouseClicked

    private void taoHoaDonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taoHoaDonBtnActionPerformed
        int row = jTable1.getSelectedRow();
        if (row >= 0) {
            if (jTable2.getRowCount() > 0) {
                jDialog1.setSize(400, 250);
                jDialog1.setLocationRelativeTo(null);
                jDialog1.setVisible(true);
            } else {
                if (JOptionPane.showConfirmDialog(null, "Bạn muốn hủy phục vụ bàn?") == JOptionPane.YES_OPTION) {
                    capNhatBan();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chọn bàn muốn tạo hóa đơn", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_taoHoaDonBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        taoHoaDon("Tiền mặt");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        taoHoaDon("Chuyển khoản");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jDialog1.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void lamMoiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lamMoiBtnActionPerformed
        sdtTxt.setText("");
        tenKHTxt.setText("");
        capBacTxt.setText("Đồng");
        giamTxt.setText("0");
        tongTienTxt.setText("0.0");
        tienGiamTxt.setText("0.0");
        vATTxt.setText("0.0");
        thanhTienTxt.setText("0.0");
        jTable1.clearSelection();
        modelTable2.setRowCount(0);
    }//GEN-LAST:event_lamMoiBtnActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jDialog2.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int row = jTable3.getSelectedRow();
        if (row >= 0) {
            if (hoaDon_dao.updateTrangThai(modelTable3.getValueAt(row, 0).toString())) {
                JOptionPane.showMessageDialog(null, "Cập nhật trạng thái thành công");
                modelTable3.setRowCount(0);
                docDuLieuDatabaseVaoTableHoaDon();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void docDuLieuDatabaseVaoTableBan() {
        List<Ban> list = ban_dao.getAllTableBan();
        for (Ban ban : list) {
            if (ban.getTrangThai().equals("Đang sử dụng")) {
                modelTable.addRow(new Object[]{ban.getMaBan(), ban.getMaBan().substring(1)});
            }
        }
    }

    private void docDuLieuDataBaseVaoTableMon(String maBan) {
        boolean flag = false;
        List<ChiTietGoiMon> list = goiMon_dao.getAllTableChiTietGoiMon();
        for (ChiTietGoiMon gm : list) {
            if (gm.getMaB().getMaBan().equals(maBan)) {
                if (gm.getThanhToan().equals("Chưa thanh toán")) {
                    for (int i = 0; i < modelTable2.getRowCount(); i++) {
                        if (gm.getMaMA().getMaMA().equals(modelTable2.getValueAt(i, 1))) {
                            if (gm.getTrangThai().equals(modelTable2.getValueAt(i, 0))) {
                                modelTable2.setValueAt(Integer.parseInt(modelTable2.getValueAt(i, 4).toString()) + gm.getSoLuong(), i, 4);
                                flag = true;
                            }
                        }
                    }
                    if (flag == false) {
                        modelTable2.addRow(new Object[]{gm.getTrangThai(), gm.getMaMA().getMaMA(), monAn_dao.searchTenMonAnTheoMa(gm.getMaMA().getMaMA()),
                            monAn_dao.searchDonGiaMonAnTheoMa(gm.getMaMA().getMaMA()), gm.getSoLuong(), monAn_dao.searchDonGiaMonAnTheoMa(gm.getMaMA().getMaMA()) * gm.getSoLuong()});
                    }
                }
            }
        }
    }

    public String generateMaHoaDon(LocalDate date) {
        int day = date.getDayOfMonth(); // Lấy ngày
        int month = date.getMonthValue(); // Lấy tháng
        int year = date.getYear() % 100; // Lấy hai chữ số cuối của năm
        int tt = kiemTraTT(day, month, year);
        // Tạo mã phiếu theo định dạng PXXYYZZAA
        return String.format("HD%08d%02d%02d%04d", Integer.valueOf(Main.maNV.substring(2)), month, year, tt);
    }

    public int kiemTraTT(int day, int month, int year) {
        int tt = 1;
        List<HoaDon> list = hoaDon_dao.getAllTableHoaDon();
        for (HoaDon hd : list) {
            if (hd.getMaHD().substring(2, 10).equals(Main.maNV.substring(2))) {
                if (hd.getMaHD().substring(12, 14).equals(String.valueOf(year))) {
                    tt += 1;
                }
            }
        }
        return tt;
    }

    private float tongTien() {
        float tongTien = 0;
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            tongTien += Float.parseFloat(jTable2.getValueAt(i, 5).toString());
        }
        return tongTien;
    }

    private void capNhatTenVaCapBac() {
        String sdt = sdtTxt.getText();
        List<KhachHang> list = khachHang_dao.getAllTableKhachHang();
        for (KhachHang kh : list) {
            if (kh.getSdt().equals(sdt)) {
                tenKHTxt.setText(kh.getTenKH());
                capBacTxt.setText(kh.getCapBac());
                break;
            } else {
                tenKHTxt.setText("");
                capBacTxt.setText("Đồng");
            }
        }
    }

    private void capNhatGiam() {
        if (capBacTxt.getText().equals("Đồng")) {
            giamTxt.setText("0");
        } else if (capBacTxt.getText().equals("Bạc")) {
            giamTxt.setText("3");
        } else if (capBacTxt.getText().equals("Vàng")) {
            giamTxt.setText("6");
        } else if (capBacTxt.getText().equals("Kim cương")) {
            giamTxt.setText("10");
        }
    }

    private void capNhatTienGiam() {
        float tien = Float.parseFloat(tongTienTxt.getText()) * (Float.parseFloat(giamTxt.getText()) / 100);
        tienGiamTxt.setText(String.valueOf(tien));
    }

    private void capNhatVAT() {
        float tien = Float.parseFloat(tongTienTxt.getText()) - Float.parseFloat(tienGiamTxt.getText());
        vATTxt.setText(String.valueOf(tien * 0.1));
    }

    private void capNhatThanhTIen() {
        float tien = Float.parseFloat(tongTienTxt.getText()) - Float.parseFloat(tienGiamTxt.getText()) + Float.parseFloat(vATTxt.getText());
        thanhTienTxt.setText(String.valueOf(tien));
    }

    private void taoHoaDon(String phuongThuc) {
        List<ChiTietGoiMon> ctgm = goiMon_dao.getAllTableChiTietGoiMon();
        if (tenKHTxt.getText().trim().isEmpty()) {
            String maHD = maHDTxt.getText();
            LocalDate ngayLap = LocalDate.now();
            String trangThai = "Chưa thanh toán";
            NhanVien maNV = new NhanVien(maNVTxt.getText());
            KhachHang maKH = new KhachHang(generateMaKhachHang(ngayLap));
            Ban maBan = new Ban((String) modelTable.getValueAt(jTable1.getSelectedRow(), 0));
            float thanhTien = Float.parseFloat(thanhTienTxt.getText());
            HoaDon hd = new HoaDon(maHD, ngayLap, phuongThuc, trangThai, maNV, maKH, maBan, thanhTien);
            if (khachHang_dao.insert(new KhachHang(maKH.getMaKH(), "", "", "", null, LocalDate.now(), 0, "Đồng"))) {
                if (hoaDon_dao.insert(hd)) {
                    JOptionPane.showMessageDialog(null, "Tạo hóa đơn thành công");
                    for (ChiTietGoiMon gm : ctgm) {
                        if (gm.getMaB().getMaBan().equals(modelTable.getValueAt(jTable1.getSelectedRow(), 0))) {
                            if (gm.getThanhToan().equals("Chưa thanh toán")) {
                                goiMon_dao.updateThanhToan("Đã thanh toán", gm.getMaCTGM());
                            }
                        }
                    }
                    ban_dao.updateTrangThaiTrong(modelTable.getValueAt(jTable1.getSelectedRow(), 0).toString());
                    phieuDatBan_dao.updateTrangThaiTheoBan(modelTable.getValueAt(jTable1.getSelectedRow(), 0).toString());
                    for (int i = 0; i < modelTable2.getRowCount(); i++) {
                        HoaDon maHDCT = new HoaDon(maHDTxt.getText());
                        MonAn maMACT = new MonAn((String) jTable2.getValueAt(i, 1));
                        int soLuong = (int) jTable2.getValueAt(i, 4);
                        float tongTien = (float) jTable2.getValueAt(i, 5);
                        ChiTietHoaDon cthd = new ChiTietHoaDon(maHDCT, maMACT, soLuong, tongTien);
                        chiTietHoaDon_dao.insert(cthd);
                    }
                    modelTable.setRowCount(0);
                    docDuLieuDatabaseVaoTableBan();
                    modelTable2.setRowCount(0);
                    jDialog1.dispose();
                    sdtTxt.setText("");
                    tenKHTxt.setText("");
                    capBacTxt.setText("Đồng");
                    giamTxt.setText("0");
                    tongTienTxt.setText("0.0");
                    tienGiamTxt.setText("0.0");
                    vATTxt.setText("0.0");
                    thanhTienTxt.setText("0.0");
                }
            }
        } else {
            int diem = (int) Double.parseDouble(thanhTienTxt.getText());
            int result = diem / 10000;
            String maHD = maHDTxt.getText();
            LocalDate ngayLap = LocalDate.now();
            String trangThai = "Chưa thanh toán";
            NhanVien maNV = new NhanVien(maNVTxt.getText());
            KhachHang maKH = new KhachHang(khachHang_dao.searchMaTheoSDT(sdtTxt.getText()));
            Ban maBan = new Ban((String) modelTable.getValueAt(jTable1.getSelectedRow(), 0));
            float thanhTien = Float.parseFloat(thanhTienTxt.getText());
            HoaDon hd = new HoaDon(maHD, ngayLap, phuongThuc, trangThai, maNV, maKH, maBan, thanhTien);
            if (hoaDon_dao.insert(hd)) {
                JOptionPane.showMessageDialog(null, "Tạo hóa đơn thành công");
                for (ChiTietGoiMon gm : ctgm) {
                    if (gm.getMaB().getMaBan().equals(modelTable.getValueAt(jTable1.getSelectedRow(), 0))) {
                        if (gm.getThanhToan().equals("Chưa thanh toán")) {
                            goiMon_dao.updateThanhToan("Đã thanh toán", gm.getMaCTGM());
                        }
                    }
                }
                ban_dao.updateTrangThaiTrong(modelTable.getValueAt(jTable1.getSelectedRow(), 0).toString());
                phieuDatBan_dao.updateTrangThaiTheoBan(modelTable.getValueAt(jTable1.getSelectedRow(), 0).toString());
                khachHang_dao.capNhatDiem(sdtTxt.getText(), khachHang_dao.searchDiemTheoSDT(sdtTxt.getText()) + result);
                for (int i = 0; i < modelTable2.getRowCount(); i++) {
                    HoaDon maHDCT = new HoaDon(maHDTxt.getText());
                    MonAn maMACT = new MonAn((String) jTable2.getValueAt(i, 1));
                    int soLuong = (int) jTable2.getValueAt(i, 4);
                    float tongTien = (float) jTable2.getValueAt(i, 5);
                    ChiTietHoaDon cthd = new ChiTietHoaDon(maHDCT, maMACT, soLuong, tongTien);
//                        System.out.println(cthd);
                    chiTietHoaDon_dao.insert(cthd);
                }
                modelTable.setRowCount(0);
                docDuLieuDatabaseVaoTableBan();
                modelTable2.setRowCount(0);
                jDialog1.dispose();
                sdtTxt.setText("");
                tenKHTxt.setText("");
                capBacTxt.setText("Đồng");
                giamTxt.setText("0");
                tongTienTxt.setText("0.0");
                tienGiamTxt.setText("0.0");
                vATTxt.setText("0.0");
                thanhTienTxt.setText("0.0");
            }
        }
    }

    public String generateMaKhachHang(LocalDate date) {
        int day = date.getDayOfMonth(); // Lấy ngày
        int month = date.getMonthValue(); // Lấy tháng
        int year = date.getYear() % 100; // Lấy hai chữ số cuối của năm
        int tt = kiemTraTT(day, month, year);
        // Tạo mã phiếu theo định dạng PXXYYZZAA
//        System.out.println(String.format("KH%02d%02d%04d", month, year, tt));
        return String.format("KH%02d%02d%04d", month, year, tt);
    }

    public int kiemTraTTKhachHang(int day, int month, int year) {
        int tt = 1;
        List<KhachHang> list = khachHang_dao.getAllTableKhachHang();
        for (KhachHang kh : list) {
            if (kh.getMaKH().substring(2, 6).equals(String.valueOf(month) + String.valueOf(year))) {
                tt += 1;
            }
        }
        return tt;
    }

    private void capNhatBan() {
        ban_dao.updateTrangThaiTrong(modelTable.getValueAt(jTable1.getSelectedRow(), 0).toString());
        phieuDatBan_dao.updateTrangThaiTheoBan(modelTable.getValueAt(jTable1.getSelectedRow(), 0).toString());
        modelTable.setRowCount(0);
        docDuLieuDatabaseVaoTableBan();
        modelTable2.setRowCount(0);
    }

    public void findBan(String maBan) {
        List<Ban> list = ban_dao.getAllTableBan();
        for (Ban ban : list) {
            if (ban.getTrangThai().equals("Đang sử dụng")) {
                if (ban.getMaBan().contains(maBan)) {
                    modelTable.addRow(new Object[]{ban.getMaBan(), ban.getMaBan().substring(1)});
                } else if (ban.getMaBan().equals("")) {
                    docDuLieuDatabaseVaoTableBan();
                }
            }
        }
    }

    private void docDuLieuDatabaseVaoTableHoaDon() {
        List<HoaDon> list = hoaDon_dao.getAllTableHoaDon();
        for (HoaDon hd : list) {
            if (hd.getTrangThai().equals("Chưa thanh toán")) {
                modelTable3.addRow(new Object[]{hd.getMaHD(), hd.getMaBan().getMaBan().substring(1), hd.getNgayLap(), hd.getPhuongThuc(), hd.getThanhTien()});
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField capBacTxt;
    private javax.swing.JTextField giamTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton lamMoiBtn;
    private javax.swing.JTextField maHDTxt;
    private javax.swing.JTextField maNVTxt;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin111;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin112;
    private Utils.scroll.win11.ScrollPaneWin11 scrollPaneWin113;
    private javax.swing.JTextField sdtTxt;
    private javax.swing.JButton taoHoaDonBtn;
    private javax.swing.JTextField tenKHTxt;
    private javax.swing.JTextField thanhTienTxt;
    private javax.swing.JTextField tienGiamTxt;
    private javax.swing.JTextField tongTienTxt;
    private javax.swing.JTextField vATTxt;
    // End of variables declaration//GEN-END:variables
}
